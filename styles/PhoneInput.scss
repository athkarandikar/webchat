@import './_colors.scss';

/* CSS variables. */

$PhoneInput-color--focus: $accent-primary;
$PhoneInputInternationalIconPhone-opacity: 0.8;
$PhoneInputInternationalIconGlobe-opacity: 0.65;
$PhoneInputCountrySelect-marginRight: 0.35em;
$PhoneInputCountrySelectArrow-width: 0.3em;
$PhoneInputCountrySelectArrow-marginLeft: $PhoneInputCountrySelect-marginRight;
$PhoneInputCountrySelectArrow-borderWidth: 1px;
$PhoneInputCountrySelectArrow-opacity: 0.65;
$PhoneInputCountrySelectArrow-color: inherit;
$PhoneInputCountrySelectArrow-color--focus: $PhoneInput-color--focus;
$PhoneInputCountrySelectArrow-transform: rotate(45deg);
$PhoneInputCountryFlag-aspectRatio: 1.5;
$PhoneInputCountryFlag-height: 1em;
$PhoneInputCountryFlag-borderWidth: 1px;
$PhoneInputCountryFlag-borderColor: $gray--outline--focus;
$PhoneInputCountryFlag-borderColor--focus: $PhoneInput-color--focus;
$PhoneInputCountryFlag-backgroundColor--loading: $gray--outline;
// }

label {
    color: $white--text;
}

.PhoneInput {
    /* This is done to stretch the contents of this component. */
    display: flex;
    align-items: center;
    gap: 0.8rem;

    width: 32rem;
    border-radius: 5px;
    background-color: $primary--primary;
    border: 1px solid $gray--outline;
    padding: 1.2rem 1.6rem;
    transition: border 0.2s ease;
    color: $white--input-text;

    &:focus {
        border: 1px solid lighten($gray--outline, 8%);
    }
}

.PhoneInputInput {
    /* The phone number input stretches to fill all empty space */
    flex: 1;
    /* The phone number input should shrink
	   to make room for the extension input */
    min-width: 0;

    color: $white--input-text;
    caret-color: $gray--input-caret-color;

    font-weight: 400;
    font-size: 1.6rem;
    line-height: 24px;

    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active {
        -webkit-box-shadow: 0 0 0 30px $primary--primary inset !important;
        -webkit-text-fill-color: $white--input-text !important;
    }
}

.PhoneInputCountryIcon {
    width: calc(
        ($PhoneInputCountryFlag-height) * ($PhoneInputCountryFlag-aspectRatio)
    );
    height: ($PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
    width: ($PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
    /* Removed `background-color` because when an `<img/>` was still loading
	   it would show a dark gray rectangle. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom. */
    background-color: ($PhoneInputCountryFlag-backgroundColor--loading);
    /* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom,
	   so an additional "inset" border is added. */
    box-shadow: 0 0 0 ($PhoneInputCountryFlag-borderWidth)
            ($PhoneInputCountryFlag-borderColor),
        inset 0 0 0 ($PhoneInputCountryFlag-borderWidth)
            ($PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
    /* Fixes weird vertical space above the flag icon. */
    /* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
    display: block;
    /* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
	   Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
    width: 100%;
    height: 100%;
}

.PhoneInputInternationalIconPhone {
    opacity: ($PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
    opacity: ($PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
    position: relative;
    align-self: stretch;
    display: flex;
    align-items: center;
    margin-right: ($PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: 1;
    border: 0;
    opacity: 0;
    cursor: pointer;
}

.PhoneInputCountrySelect[disabled],
.PhoneInputCountrySelect[readonly] {
    cursor: default;
}

.PhoneInputCountrySelectArrow {
    display: block;
    content: '';
    width: ($PhoneInputCountrySelectArrow-width);
    height: ($PhoneInputCountrySelectArrow-width);
    margin-left: ($PhoneInputCountrySelectArrow-marginLeft);
    border-style: solid;
    border-color: ($PhoneInputCountrySelectArrow-color);
    border-top-width: 0;
    border-bottom-width: ($PhoneInputCountrySelectArrow-borderWidth);
    border-left-width: 0;
    border-right-width: ($PhoneInputCountrySelectArrow-borderWidth);
    transform: ($PhoneInputCountrySelectArrow-transform);
    opacity: ($PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountrySelect:focus
    + .PhoneInputCountryIcon
    + .PhoneInputCountrySelectArrow {
    opacity: 1;
    color: ($PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {
    box-shadow: 0 0 0 ($PhoneInputCountryFlag-borderWidth)
            ($PhoneInputCountryFlag-borderColor--focus),
        inset 0 0 0 ($PhoneInputCountryFlag-borderWidth)
            ($PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountrySelect:focus
    + .PhoneInputCountryIcon
    .PhoneInputInternationalIconGlobe {
    opacity: 1;
    color: ($PhoneInputCountrySelectArrow-color--focus);
}
